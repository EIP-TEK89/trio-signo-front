{"ast":null,"code":"var _jsxFileName = \"/home/diouck/EIP/trio-signo-front/src/LoginSignup/LoginSignup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginSignup.css';\n\n// Helper function to validate email\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// Helper function to validate password security\nconst isValidPassword = password => {\n  // Password must be at least 8 characters long and contain at least one number and one special character\n  const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n  return passwordRegex.test(password);\n};\nconst LoginSignup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n\n  // Simulated API call\n  const fakeApiCall = () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // Simulate success or failure randomly\n        Math.random() > 0.5 ? resolve('Success') : reject('API Error: Unable to process request');\n      }, 1000);\n    });\n  };\n  const handleSignUp = async () => {\n    let validationErrors = {};\n\n    // Validate email\n    if (!isValidEmail(email)) {\n      validationErrors = {\n        ...validationErrors,\n        email: 'Invalid email address'\n      };\n    }\n\n    // Validate password\n    if (!isValidPassword(password)) {\n      validationErrors = {\n        ...validationErrors,\n        password: 'Password must be at least 8 characters long and contain at least one number and one special character'\n      };\n    }\n    setErrors(validationErrors);\n\n    // If there are validation errors, stop the process\n    if (Object.keys(validationErrors).length > 0) return;\n    try {\n      const response = await fakeApiCall();\n      console.log(response); // Handle successful API response\n    } catch (error) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        apiError: error\n      }));\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await fakeApiCall();\n      console.log(response); // Handle successful API response\n    } catch (error) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        apiError: error\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email Id\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"forgot-password\",\n      children: [\"Lost Password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Click Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), errors.apiError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"api-error-message\",\n      children: errors.apiError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignup, \"BlJYL0CX+eKfP86cCFYZUnGGoOc=\");\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","isValidEmail","email","emailRegex","test","isValidPassword","password","passwordRegex","LoginSignup","_s","setEmail","setPassword","errors","setErrors","fakeApiCall","Promise","resolve","reject","setTimeout","Math","random","handleSignUp","validationErrors","Object","keys","length","response","console","log","error","prevErrors","apiError","handleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","href","onClick","_c","$RefreshReg$"],"sources":["/home/diouck/EIP/trio-signo-front/src/LoginSignup/LoginSignup.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './LoginSignup.css';\n\n// Helper function to validate email\nconst isValidEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// Helper function to validate password security\nconst isValidPassword = (password: string): boolean => {\n  // Password must be at least 8 characters long and contain at least one number and one special character\n  const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n  return passwordRegex.test(password);\n};\n\nconst LoginSignup: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState<{ email?: string; password?: string; apiError?: string }>({});\n\n  // Simulated API call\n  const fakeApiCall = (): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // Simulate success or failure randomly\n        Math.random() > 0.5 ? resolve('Success') : reject('API Error: Unable to process request');\n      }, 1000);\n    });\n  };\n\n  const handleSignUp = async () => {\n    let validationErrors = {};\n\n    // Validate email\n    if (!isValidEmail(email)) {\n      validationErrors = { ...validationErrors, email: 'Invalid email address' };\n    }\n\n    // Validate password\n    if (!isValidPassword(password)) {\n      validationErrors = { ...validationErrors, password: 'Password must be at least 8 characters long and contain at least one number and one special character' };\n    }\n\n    setErrors(validationErrors);\n\n    // If there are validation errors, stop the process\n    if (Object.keys(validationErrors).length > 0) return;\n\n    try {\n      const response = await fakeApiCall();\n      console.log(response); // Handle successful API response\n    } catch (error: any) {\n      setErrors((prevErrors) => ({ ...prevErrors, apiError: error }));\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const response = await fakeApiCall();\n      console.log(response); // Handle successful API response\n    } catch (error: any) {\n      setErrors((prevErrors) => ({ ...prevErrors, apiError: error }));\n    }\n  };\n\n  return (\n    <div className=\"login-signup-container\">\n      <h2>Connection</h2>\n      <div className=\"form-group\">\n        <input\n          type=\"email\"\n          placeholder=\"Email Id\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        {errors.email && <p className=\"error-message\">{errors.email}</p>}\n      </div>\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        {errors.password && <p className=\"error-message\">{errors.password}</p>}\n      </div>\n      <p className=\"forgot-password\">\n        Lost Password? <a href=\"#\">Click Here!</a>\n      </p>\n      <div className=\"button-container\">\n        <button onClick={handleSignUp}>Sign Up</button>\n        <button onClick={handleLogin}>Login</button>\n      </div>\n      {errors.apiError && <p className=\"api-error-message\">{errors.apiError}</p>}\n    </div>\n  );\n};\n\nexport default LoginSignup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAIC,KAAa,IAAc;EAC/C,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AAC/B,CAAC;;AAED;AACA,MAAMG,eAAe,GAAIC,QAAgB,IAAc;EACrD;EACA,MAAMC,aAAa,GAAG,sDAAsD;EAC5E,OAAOA,aAAa,CAACH,IAAI,CAACE,QAAQ,CAAC;AACrC,CAAC;AAED,MAAME,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEK,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAA2D,CAAC,CAAC,CAAC;;EAElG;EACA,MAAMgB,WAAW,GAAGA,CAAA,KAAuB;IACzC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,UAAU,CAAC,MAAM;QACf;QACAC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAGJ,OAAO,CAAC,SAAS,CAAC,GAAGC,MAAM,CAAC,sCAAsC,CAAC;MAC3F,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,gBAAgB,GAAG,CAAC,CAAC;;IAEzB;IACA,IAAI,CAACrB,YAAY,CAACC,KAAK,CAAC,EAAE;MACxBoB,gBAAgB,GAAG;QAAE,GAAGA,gBAAgB;QAAEpB,KAAK,EAAE;MAAwB,CAAC;IAC5E;;IAEA;IACA,IAAI,CAACG,eAAe,CAACC,QAAQ,CAAC,EAAE;MAC9BgB,gBAAgB,GAAG;QAAE,GAAGA,gBAAgB;QAAEhB,QAAQ,EAAE;MAAwG,CAAC;IAC/J;IAEAO,SAAS,CAACS,gBAAgB,CAAC;;IAE3B;IACA,IAAIC,MAAM,CAACC,IAAI,CAACF,gBAAgB,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;IAE9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAAC,CAAC;MACpCa,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOG,KAAU,EAAE;MACnBhB,SAAS,CAAEiB,UAAU,KAAM;QAAE,GAAGA,UAAU;QAAEC,QAAQ,EAAEF;MAAM,CAAC,CAAC,CAAC;IACjE;EACF,CAAC;EAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMZ,WAAW,CAAC,CAAC;MACpCa,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOG,KAAU,EAAE;MACnBhB,SAAS,CAAEiB,UAAU,KAAM;QAAE,GAAGA,UAAU;QAAEC,QAAQ,EAAEF;MAAM,CAAC,CAAC,CAAC;IACjE;EACF,CAAC;EAED,oBACE7B,OAAA;IAAKiC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrClC,OAAA;MAAAkC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtC,OAAA;MAAKiC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBlC,OAAA;QACEuC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvC,KAAM;QACbwC,QAAQ,EAAGC,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,EACD1B,MAAM,CAACV,KAAK,iBAAIF,OAAA;QAAGiC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEtB,MAAM,CAACV;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACNtC,OAAA;MAAKiC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBlC,OAAA;QACEuC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEnC,QAAS;QAChBoC,QAAQ,EAAGC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,EACD1B,MAAM,CAACN,QAAQ,iBAAIN,OAAA;QAAGiC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEtB,MAAM,CAACN;MAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACNtC,OAAA;MAAGiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAC,iBACd,eAAAlC,OAAA;QAAG6C,IAAI,EAAC,GAAG;QAAAX,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACJtC,OAAA;MAAKiC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlC,OAAA;QAAQ8C,OAAO,EAAEzB,YAAa;QAAAa,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/CtC,OAAA;QAAQ8C,OAAO,EAAEd,WAAY;QAAAE,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACL1B,MAAM,CAACmB,QAAQ,iBAAI/B,OAAA;MAAGiC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEtB,MAAM,CAACmB;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAjFID,WAAqB;AAAAuC,EAAA,GAArBvC,WAAqB;AAmF3B,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}