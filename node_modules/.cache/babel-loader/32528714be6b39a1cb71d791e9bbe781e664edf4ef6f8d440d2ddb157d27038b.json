{"ast":null,"code":"var _jsxFileName = \"/home/diouck/EIP/trio-signo-front/src/Home/HandLandmarkerComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { HandLandmarker, FilesetResolver } from '@mediapipe/tasks-vision';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { HAND_CONNECTIONS } from '@mediapipe/hands';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimp;\nconst HandLandmarkerComponent = () => {\n  _s();\n  const [handLandmarker, setHandLandmarker] = useState(undefined);\n  const [webcamRunning, setWebcamRunning] = useState(false);\n  const [runningMode, setRunningMode] = useState('IMAGE');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [lastVideoTime, setLastVideoTime] = useState(-1);\n\n  // Charger le modèle MediaPipe HandLandmarker lors du montage du composant\n  useEffect(() => {\n    const loadHandLandmarker = async () => {\n      const vision = await FilesetResolver.forVisionTasks('https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm');\n      const handLandmarkerInstance = await HandLandmarker.createFromOptions(vision, {\n        baseOptions: {\n          modelAssetPath: 'https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task',\n          delegate: 'GPU'\n        },\n        runningMode: runningMode,\n        numHands: 2\n      });\n      setHandLandmarker(handLandmarkerInstance);\n    };\n    loadHandLandmarker();\n  }, [runningMode]);\n\n  // Gérer l'activation de la webcam\n  const enableCam = async () => {\n    if (!handLandmarker) {\n      console.log('Wait! HandLandmarker not loaded yet.');\n      return;\n    }\n    if (!webcamRunning) {\n      setWebcamRunning(true);\n\n      // getUserMedia parameters.\n      const constraints = {\n        video: true\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.addEventListener('loadeddata', predictWebcam);\n      }\n    } else {\n      setWebcamRunning(false);\n    }\n  };\n\n  // Prédiction en temps réel avec la webcam\n  const predictWebcam = async () => {\n    if (!videoRef.current || !canvasRef.current || !handLandmarker) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext('2d');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    if (runningMode === 'IMAGE') {\n      setRunningMode('VIDEO');\n      await handLandmarker.setOptions({\n        runningMode: 'VIDEO'\n      });\n    }\n    const startTimeMs = performance.now();\n    if (lastVideoTime !== video.currentTime) {\n      setLastVideoTime(video.currentTime);\n      const results = handLandmarker.detectForVideo(video, startTimeMs);\n      if (canvasCtx && results.landmarks) {\n        // Vérifiez si canvasCtx n'est pas null\n        canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n        for (const landmarks of results.landmarks) {\n          drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n            color: '#00FF00',\n            lineWidth: 5\n          });\n          drawLandmarks(canvasCtx, landmarks, {\n            color: '#FF0000',\n            lineWidth: 2\n          });\n        }\n      }\n    }\n    if (webcamRunning) {\n      requestAnimationFrame(predictWebcam);\n    }\n  };\n\n  // Gestion des événements de clic sur les images\n  const handleImageClick = async event => {\n    if (!handLandmarker || runningMode === 'VIDEO') return;\n    setRunningMode('IMAGE');\n    await handLandmarker.setOptions({\n      runningMode: 'IMAGE'\n    });\n    const image = event.target;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.naturalWidth;\n    canvas.height = image.naturalHeight;\n    const ctx = canvas.getContext('2d');\n    document.body.appendChild(canvas);\n    const results = handLandmarker.detect(image);\n    if (results.landmarks) {\n      for (const landmarks of results.landmarks) {\n        drawConnectors(ctx, landmarks, HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5\n        });\n        drawLandmarks(ctx, landmarks, {\n          color: '#FF0000',\n          lineWidth: 2\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hand Landmark Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Demo: Detecting Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on an image to detect hand landmarks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleImageClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://assets.codepen.io/9177687/hand-ge4ca13f5d_1920.jpg\",\n          width: \"400\",\n          alt: \"Hand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleImageClick,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://assets.codepen.io/9177687/couple-gb7cb5db4c_1920.jpg\",\n          width: \"400\",\n          alt: \"Couple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Demo: Webcam continuous hands landmarks detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hold your hand in front of your webcam to get real-time hand landmark detection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enableCam,\n        className: \"mdc-button mdc-button--raised\",\n        children: webcamRunning ? 'DISABLE WEBCAM' : 'ENABLE WEBCAM'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          style: {\n            position: 'absolute'\n          },\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: 'absolute',\n            left: 0,\n            top: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(HandLandmarkerComponent, \"F+hSVvVech9HRo0qw0l9SIy1XyY=\");\n_c = HandLandmarkerComponent;\nexport default HandLandmarkerComponent;\nvar _c;\n$RefreshReg$(_c, \"HandLandmarkerComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","HandLandmarker","FilesetResolver","drawConnectors","drawLandmarks","HAND_CONNECTIONS","jsxDEV","_jsxDEV","imp","HandLandmarkerComponent","_s","handLandmarker","setHandLandmarker","undefined","webcamRunning","setWebcamRunning","runningMode","setRunningMode","videoRef","canvasRef","lastVideoTime","setLastVideoTime","loadHandLandmarker","vision","forVisionTasks","handLandmarkerInstance","createFromOptions","baseOptions","modelAssetPath","delegate","numHands","enableCam","console","log","constraints","video","stream","navigator","mediaDevices","getUserMedia","current","srcObject","addEventListener","predictWebcam","canvas","canvasCtx","getContext","width","videoWidth","height","videoHeight","setOptions","startTimeMs","performance","now","currentTime","results","detectForVideo","landmarks","clearRect","color","lineWidth","requestAnimationFrame","handleImageClick","event","image","target","document","createElement","naturalWidth","naturalHeight","ctx","body","appendChild","detect","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","className","style","position","ref","autoPlay","playsInline","left","top","_c","$RefreshReg$"],"sources":["/home/diouck/EIP/trio-signo-front/src/Home/HandLandmarkerComponent.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { HandLandmarker, FilesetResolver } from '@mediapipe/tasks-vision';\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { HAND_CONNECTIONS } from '@mediapipe/hands';\n\nimp\n\nconst HandLandmarkerComponent: React.FC = () => {\n  const [handLandmarker, setHandLandmarker] = useState<HandLandmarker | undefined>(undefined);\n  const [webcamRunning, setWebcamRunning] = useState<boolean>(false);\n  const [runningMode, setRunningMode] = useState<'IMAGE' | 'VIDEO'>('IMAGE');\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [lastVideoTime, setLastVideoTime] = useState<number>(-1);\n\n  // Charger le modèle MediaPipe HandLandmarker lors du montage du composant\n  useEffect(() => {\n    const loadHandLandmarker = async () => {\n      const vision = await FilesetResolver.forVisionTasks(\n        'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm'\n      );\n      const handLandmarkerInstance = await HandLandmarker.createFromOptions(vision, {\n        baseOptions: {\n          modelAssetPath: 'https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task',\n          delegate: 'GPU',\n        },\n        runningMode: runningMode,\n        numHands: 2,\n      });\n      setHandLandmarker(handLandmarkerInstance);\n    };\n\n    loadHandLandmarker();\n  }, [runningMode]);\n\n  // Gérer l'activation de la webcam\n  const enableCam = async () => {\n    if (!handLandmarker) {\n      console.log('Wait! HandLandmarker not loaded yet.');\n      return;\n    }\n\n    if (!webcamRunning) {\n      setWebcamRunning(true);\n\n      // getUserMedia parameters.\n      const constraints = { video: true };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.addEventListener('loadeddata', predictWebcam);\n      }\n    } else {\n      setWebcamRunning(false);\n    }\n  };\n\n  // Prédiction en temps réel avec la webcam\n  const predictWebcam = async () => {\n    if (!videoRef.current || !canvasRef.current || !handLandmarker) return;\n  \n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext('2d');\n  \n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n  \n    if (runningMode === 'IMAGE') {\n      setRunningMode('VIDEO');\n      await handLandmarker.setOptions({ runningMode: 'VIDEO' });\n    }\n  \n    const startTimeMs = performance.now();\n    if (lastVideoTime !== video.currentTime) {\n      setLastVideoTime(video.currentTime);\n      const results = handLandmarker.detectForVideo(video, startTimeMs);\n  \n      if (canvasCtx && results.landmarks) {  // Vérifiez si canvasCtx n'est pas null\n        canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n        for (const landmarks of results.landmarks) {\n          drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n            color: '#00FF00',\n            lineWidth: 5,\n          });\n          drawLandmarks(canvasCtx, landmarks, { color: '#FF0000', lineWidth: 2 });\n        }\n      }\n    }\n  \n    if (webcamRunning) {\n      requestAnimationFrame(predictWebcam);\n    }\n  };\n  \n  // Gestion des événements de clic sur les images\n  const handleImageClick = async (event: React.MouseEvent<HTMLImageElement>) => {\n    if (!handLandmarker || runningMode === 'VIDEO') return;\n\n    setRunningMode('IMAGE');\n    await handLandmarker.setOptions({ runningMode: 'IMAGE' });\n\n    const image = event.target as HTMLImageElement;\n    const canvas = document.createElement('canvas');\n    canvas.width = image.naturalWidth;\n    canvas.height = image.naturalHeight;\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    document.body.appendChild(canvas);\n\n    const results = handLandmarker.detect(image);\n\n    if (results.landmarks) {\n      for (const landmarks of results.landmarks) {\n        drawConnectors(ctx, landmarks, HAND_CONNECTIONS, {\n          color: '#00FF00',\n          lineWidth: 5,\n        });\n        drawLandmarks(ctx, landmarks, { color: '#FF0000', lineWidth: 2 });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Hand Landmark Detection</h1>\n\n      {/* Images à cliquer pour détecter */}\n      <section>\n        <h2>Demo: Detecting Images</h2>\n        <p>Click on an image to detect hand landmarks.</p>\n        <div onClick={handleImageClick}>\n          <img\n            src=\"https://assets.codepen.io/9177687/hand-ge4ca13f5d_1920.jpg\"\n            width=\"400\"\n            alt=\"Hand\"\n          />\n        </div>\n        <div onClick={handleImageClick}>\n          <img\n            src=\"https://assets.codepen.io/9177687/couple-gb7cb5db4c_1920.jpg\"\n            width=\"400\"\n            alt=\"Couple\"\n          />\n        </div>\n      </section>\n\n      {/* Webcam en direct */}\n      <section>\n        <h2>Demo: Webcam continuous hands landmarks detection</h2>\n        <p>\n          Hold your hand in front of your webcam to get real-time hand landmark detection.\n        </p>\n        <button onClick={enableCam} className=\"mdc-button mdc-button--raised\">\n          {webcamRunning ? 'DISABLE WEBCAM' : 'ENABLE WEBCAM'}\n        </button>\n        <div style={{ position: 'relative' }}>\n          <video ref={videoRef} style={{ position: 'absolute' }} autoPlay playsInline></video>\n          <canvas ref={canvasRef} style={{ position: 'absolute', left: 0, top: 0 }}></canvas>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default HandLandmarkerComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}