{"ast":null,"code":"var _jsxFileName = \"/home/diouck/EIP/trio-signo-front/src/Home/HandLandmarkerComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { HandLandmarker, FilesetResolver } from 'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HandLandmarkerComponent = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [handLandmarker, setHandLandmarker] = useState(undefined);\n  const [webcamRunning, setWebcamRunning] = useState(false);\n  const [runningMode, setRunningMode] = useState('IMAGE');\n  const [lastVideoTime, setLastVideoTime] = useState(-1);\n  useEffect(() => {\n    const createHandLandmarker = async () => {\n      const vision = await FilesetResolver.forVisionTasks('https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm');\n      const landmarker = await HandLandmarker.createFromOptions(vision, {\n        baseOptions: {\n          modelAssetPath: 'https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task',\n          delegate: 'GPU'\n        },\n        runningMode: runningMode,\n        numHands: 2\n      });\n      setHandLandmarker(landmarker);\n    };\n    createHandLandmarker();\n  }, [runningMode]);\n  const enableCam = () => {\n    if (!handLandmarker) {\n      console.log('Wait! handLandmarker not loaded yet.');\n      return;\n    }\n    if (webcamRunning) {\n      setWebcamRunning(false);\n    } else {\n      setWebcamRunning(true);\n      const constraints = {\n        video: true\n      };\n      navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.addEventListener('loadeddata', predictWebcam);\n        }\n      });\n    }\n  };\n  const predictWebcam = async () => {\n    if (!videoRef.current || !canvasRef.current || !handLandmarker) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext('2d');\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    if (runningMode === 'IMAGE') {\n      setRunningMode('VIDEO');\n      await handLandmarker.setOptions({\n        runningMode: 'VIDEO'\n      });\n    }\n    if (lastVideoTime !== video.currentTime) {\n      setLastVideoTime(video.currentTime);\n      const startTimeMs = performance.now();\n      const results = handLandmarker.detectForVideo(video, startTimeMs);\n      canvasCtx === null || canvasCtx === void 0 ? void 0 : canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n      if (results.landmarks) {\n        for (const landmarks of results.landmarks) {\n          drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n            color: '#00FF00',\n            lineWidth: 5\n          });\n          drawLandmarks(canvasCtx, landmarks, {\n            color: '#FF0000',\n            lineWidth: 2\n          });\n        }\n      }\n    }\n    if (webcamRunning) {\n      requestAnimationFrame(predictWebcam);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Demo: Webcam continuous hands landmarks detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hold your hand in front of your webcam to get real-time hand landmark detection.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \"Click \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"enable webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), \" below and grant access to the webcam if prompted.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"liveView\",\n      className: \"videoView\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: enableCam,\n        className: \"mdc-button mdc-button--raised\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mdc-button__ripple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mdc-button__label\",\n          children: webcamRunning ? 'DISABLE PREDICTIONS' : 'ENABLE WEBCAM'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          style: {\n            position: 'absolute'\n          },\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: 'absolute',\n            left: 0,\n            top: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(HandLandmarkerComponent, \"+MwafKq4I8UjnF+4ZvLOUIq/On8=\");\n_c = HandLandmarkerComponent;\nexport default HandLandmarkerComponent;\nvar _c;\n$RefreshReg$(_c, \"HandLandmarkerComponent\");","map":{"version":3,"names":["React","useRef","useState","useEffect","HandLandmarker","FilesetResolver","jsxDEV","_jsxDEV","HandLandmarkerComponent","_s","videoRef","canvasRef","handLandmarker","setHandLandmarker","undefined","webcamRunning","setWebcamRunning","runningMode","setRunningMode","lastVideoTime","setLastVideoTime","createHandLandmarker","vision","forVisionTasks","landmarker","createFromOptions","baseOptions","modelAssetPath","delegate","numHands","enableCam","console","log","constraints","video","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","addEventListener","predictWebcam","canvas","canvasCtx","getContext","width","videoWidth","height","videoHeight","setOptions","currentTime","startTimeMs","performance","now","results","detectForVideo","clearRect","landmarks","drawConnectors","HAND_CONNECTIONS","color","lineWidth","drawLandmarks","requestAnimationFrame","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","onClick","style","position","ref","autoPlay","playsInline","left","top","_c","$RefreshReg$"],"sources":["/home/diouck/EIP/trio-signo-front/src/Home/HandLandmarkerComponent.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport {\n  HandLandmarker,\n  FilesetResolver\n} from 'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0';\n\nconst HandLandmarkerComponent: React.FC = () => {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [handLandmarker, setHandLandmarker] = useState<HandLandmarker | undefined>(undefined);\n  const [webcamRunning, setWebcamRunning] = useState<boolean>(false);\n  const [runningMode, setRunningMode] = useState<string>('IMAGE');\n  const [lastVideoTime, setLastVideoTime] = useState<number>(-1);\n  \n  useEffect(() => {\n    const createHandLandmarker = async () => {\n      const vision = await FilesetResolver.forVisionTasks(\n        'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm'\n      );\n      const landmarker = await HandLandmarker.createFromOptions(vision, {\n        baseOptions: {\n          modelAssetPath: 'https://storage.googleapis.com/mediapipe-models/hand_landmarker/hand_landmarker/float16/1/hand_landmarker.task',\n          delegate: 'GPU'\n        },\n        runningMode: runningMode,\n        numHands: 2\n      });\n      setHandLandmarker(landmarker);\n    };\n\n    createHandLandmarker();\n  }, [runningMode]);\n\n  const enableCam = () => {\n    if (!handLandmarker) {\n      console.log('Wait! handLandmarker not loaded yet.');\n      return;\n    }\n\n    if (webcamRunning) {\n      setWebcamRunning(false);\n    } else {\n      setWebcamRunning(true);\n      const constraints = { video: true };\n\n      navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.addEventListener('loadeddata', predictWebcam);\n        }\n      });\n    }\n  };\n\n  const predictWebcam = async () => {\n    if (!videoRef.current || !canvasRef.current || !handLandmarker) return;\n\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext('2d');\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    if (runningMode === 'IMAGE') {\n      setRunningMode('VIDEO');\n      await handLandmarker.setOptions({ runningMode: 'VIDEO' });\n    }\n\n    if (lastVideoTime !== video.currentTime) {\n      setLastVideoTime(video.currentTime);\n      const startTimeMs = performance.now();\n      const results = handLandmarker.detectForVideo(video, startTimeMs);\n\n      canvasCtx?.clearRect(0, 0, canvas.width, canvas.height);\n      if (results.landmarks) {\n        for (const landmarks of results.landmarks) {\n          drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, { color: '#00FF00', lineWidth: 5 });\n          drawLandmarks(canvasCtx, landmarks, { color: '#FF0000', lineWidth: 2 });\n        }\n      }\n    }\n\n    if (webcamRunning) {\n      requestAnimationFrame(predictWebcam);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Demo: Webcam continuous hands landmarks detection</h2>\n      <p>\n        Hold your hand in front of your webcam to get real-time hand landmark detection.\n        <br />\n        Click <b>enable webcam</b> below and grant access to the webcam if prompted.\n      </p>\n\n      <div id=\"liveView\" className=\"videoView\">\n        <button onClick={enableCam} className=\"mdc-button mdc-button--raised\">\n          <span className=\"mdc-button__ripple\"></span>\n          <span className=\"mdc-button__label\">\n            {webcamRunning ? 'DISABLE PREDICTIONS' : 'ENABLE WEBCAM'}\n          </span>\n        </button>\n        <div style={{ position: 'relative' }}>\n          <video ref={videoRef} style={{ position: 'absolute' }} autoPlay playsInline></video>\n          <canvas ref={canvasRef} style={{ position: 'absolute', left: 0, top: 0 }}></canvas>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HandLandmarkerComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}